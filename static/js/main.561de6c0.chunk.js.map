{"version":3,"sources":["components/About.js","components/Navigation.js","utils/Constants.js","components/HowItWorks.js","components/JiraResults.js","components/JiraHolder.js","components/ForkMeOnGithub.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","show","setShow","handleClose","Fragment","Button","variant","onClick","Modal","onHide","Header","Title","Body","className","href","src","border","Footer","Navigation","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","style","display","Constants","initialJiraValues","rowid","summary","description","priority","assignee","fixversion","devpriority","localStorageKey","HowItWorks","Accordion","Card","as","eventKey","JiraResults","props","showCopyDone","event","passOrFail","target","innerHTML","setTimeout","defaultActiveKey","Alert","jiras","map","jira","getResultLine","results","document","getElementById","replaceAll","input","createElement","body","appendChild","select","execCommand","removeChild","error","console","JiraHolder","lastRowId","state","setState","useEffect","stateFromLocalStorage","localStorage","getItem","JSON","parse","resetRows","setItem","stringify","getJiraWithCustomRowId","customRowId","aJira","handleInputChanged","name","value","parseInt","parentNode","tempJiraStateHolder","i","length","onChange","autoFocus","rows","remainders","filter","deleteRow","push","ForkMeOnGitHub","data-ribbon","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.561de6c0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"../css/heart.css\";\n\nfunction About() {\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Button variant=\"navbar-btn\" onClick={handleShow}>\n\t\t\t\tAbout Me\n\t\t\t</Button>\n\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>About Me</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t\tDesigned & Developed with <span className=\"heart animate__animated animate__heartBeat animate__infinite px-1\">â™¥</span> by{\" \"}\n\t\t\t\t\t\t\t<a className=\"px-1\" href=\"https://github.com/anushibin007/jira-bulk-sub-task-creator\">\n\t\t\t\t\t\t\t\tAnu Shibin Joseph Raj\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t\t{/* This line shows the actual counter */}\n\t\t\t\t\t\t\t<img src=\"https://www.freevisitorcounters.com/en/counter/render/836517/t/0\" border=\"0\" className=\"counterimg\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"info\" onClick={handleClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</React.Fragment>\n\t);\n}\nexport default About;\n","import \"../css/navbar.css\";\nimport React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport About from \"./About\";\n\nfunction Navigation() {\n\treturn (\n\t\t<div>\n\t\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t\t<Navbar.Brand>Jira Bulk Subtask Creator</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"jsc-navbar\" />\n\t\t\t\t<Navbar.Collapse id=\"jsc-navbar\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<About />\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t\t{/* This line is to make an AJAX call to the counter update function. This will just increment the counter in the background */}\n\t\t\t<img src=\"https://www.freevisitorcounters.com/en/home/counter/836517/t/0\" style={{ display: \"none\" }}></img>\n\t\t</div>\n\t);\n}\n\nexport default Navigation;\n","const Constants = {\n    initialJiraValues: {\n        rowid: \"\",\n        summary: \"\",\n        description: \"\",\n        priority: \"@inherit\",\n        assignee: \"@current\",\n        fixversion: \"@inherit\",\n        devpriority: \"@inherit\"\n    },\n    localStorageKey: \"jsc-state\"\n}\n\nexport default Constants;","import React from \"react\";\nimport { Accordion, Card } from \"react-bootstrap\";\n\nconst HowItWorks = () => {\n\treturn (\n\t\t<Accordion>\n\t\t\t<Card>\n\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"0\">\n\t\t\t\t\t<h5>How it works</h5>\n\t\t\t\t</Accordion.Toggle>\n\t\t\t\t<Accordion.Collapse eventKey=\"0\">\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t<li>Copy the text from the Results above</li>\n\t\t\t\t\t\t\t<li>Go to your parent JIRA</li>\n\t\t\t\t\t\t\t<li>Click on More â†’ Create multiple sub-tasks</li>\n\t\t\t\t\t\t\t<li>Paste the content you copied from this page above</li>\n\t\t\t\t\t\t\t<li>Click on \"Create Sub-Tasks\"</li>\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Accordion.Collapse>\n\t\t\t</Card>\n\t\t</Accordion>\n\t);\n};\n\nexport default HowItWorks;\n","import React from \"react\";\nimport { Alert, Accordion, Card } from \"react-bootstrap\";\n\nconst JiraResults = (props) => {\n\tconst getResultLine = (jira) => {\n\t\tif (jira.summary !== \"\") {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={jira.rowid}>\n\t\t\t\t\t- {jira.summary} / description:\"{jira.description}\" priority:\"\n\t\t\t\t\t{jira.priority}\" assignee:\"{jira.assignee}\" fixversion:\"\n\t\t\t\t\t{jira.fixversion}\" cfield:\"DevPriority:{jira.devpriority}\"\n\t\t\t\t\t<br />\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst copyToClipboard = (event) => {\n\t\ttry {\n\t\t\t// Get the data that needs to be copied\n\t\t\tvar results = document.getElementById(\"results\").innerHTML;\n\t\t\t// Make sure to replace line breaks with newline character\n\t\t\tresults = results.replaceAll(\"<br>\", \"\\n\");\n\n\t\t\t// Only \"textarea\" and \"input\" fields can be \"selected\" for copying.\n\t\t\t// Hence, create a temp textarea element with our data and copy the data from it.\n\t\t\tvar input = document.createElement(\"textarea\");\n\t\t\tinput.innerHTML = results;\n\t\t\tdocument.body.appendChild(input);\n\t\t\tinput.select();\n\t\t\tdocument.execCommand(\"copy\");\n\t\t\tdocument.body.removeChild(input);\n\n\t\t\t// Show that the copy was successful\n\t\t\tshowCopyDone(event, true);\n\t\t} catch (error) {\n\t\t\t// If it failed, log the error and show an error prompt to the user\n\t\t\tconsole.error(error);\n\t\t\tshowCopyDone(event, false);\n\t\t}\n\t};\n\n\t/**\n\t * Updates the \"Copy\" button to give feedback to the user whether the copy passed or failed.\n\t *\n\t * @param {*} event\n\t * @param {*} passOrFail True if the copy was successful. False otherwise\n\t */\n\tconst showCopyDone = (event, passOrFail) => {\n\t\t// change text and the button color to show that copy was done/failed\n\t\tif (passOrFail) {\n\t\t\tevent.target.innerHTML = '<i class=\"bi bi-clipboard-check\"></i> Copied';\n\t\t\tevent.target.className = \"btn btn-success\";\n\t\t} else {\n\t\t\tevent.target.innerHTML = '<i class=\"bi bi-clipboard-x\"></i> Copy Failed';\n\t\t\tevent.target.className = \"btn btn-danger\";\n\t\t}\n\n\t\t// change it back to the old text and color after a second\n\t\tsetTimeout(() => {\n\t\t\tevent.target.innerHTML = '<i class=\"bi bi-clipboard-plus\"></i> Copy Results';\n\t\t\tevent.target.className = \"btn btn-primary\";\n\t\t}, 1000);\n\t};\n\n\treturn (\n\t\t<Accordion defaultActiveKey=\"0\">\n\t\t\t<Card>\n\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"0\">\n\t\t\t\t\t<h5>Results</h5>\n\t\t\t\t</Accordion.Toggle>\n\t\t\t\t<Accordion.Collapse eventKey=\"0\">\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Alert variant=\"secondary\" id=\"results\">\n\t\t\t\t\t\t\t{props.jiras.map((jira) => getResultLine(jira))}\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<p className=\"btn btn-primary\" onClick={copyToClipboard}>\n\t\t\t\t\t\t\t<i className=\"bi bi-clipboard-plus\"></i> Copy Results\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Accordion.Collapse>\n\t\t\t</Card>\n\t\t</Accordion>\n\t);\n};\n\nexport default JiraResults;\n","import React, { useEffect, useState } from \"react\";\nimport Constants from \"../utils/Constants\";\nimport HowItWorks from \"./HowItWorks\";\nimport JiraResults from \"./JiraResults\";\n\nconst JiraHolder = () => {\n\t/**\n\t * The state consists of an array of jiras and the lastRowId used.\n\t */\n\tconst [state, setState] = useState({\n\t\tjiras: [],\n\t\tlastRowId: 0,\n\t});\n\n\t/**\n\t * On initial page load, check if the old state is cached in local storage.\n\t * If nothing is found there, just show one empty row by calling the \"reset\" function.\n\t */\n\tuseEffect(() => {\n\t\tconst stateFromLocalStorage = localStorage.getItem(Constants.localStorageKey);\n\t\tif (stateFromLocalStorage) {\n\t\t\tsetState(JSON.parse(stateFromLocalStorage));\n\t\t} else {\n\t\t\tresetRows();\n\t\t}\n\t}, []);\n\n\t/**\n\t * Store the state to the local storage whenever it changes.\n\t * If the browser session was closed or refreshed, the user can continue from where they left.\n\t */\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(Constants.localStorageKey, JSON.stringify(state));\n\t});\n\n\t/**\n\t * Add a new row. The rowid of the new row will be one more than the lastrowId.\n\t * The new row will be filled with default values.\n\t */\n\tconst addRow = () => {\n\t\tconst rowid = state.lastRowId + 1;\n\t\tvar tempJiraStateHolder = state.jiras;\n\t\ttempJiraStateHolder.push(getJiraWithCustomRowId(rowid));\n\t\tsetState({\n\t\t\tjiras: tempJiraStateHolder,\n\t\t\tlastRowId: rowid,\n\t\t});\n\t};\n\n\t/**\n\t * Deletes a row. The last row cannot be deleted.\n\t * When trying to delete the last row, an error message is shown.\n\t * @param {*} event\n\t * @param {*} rowid\n\t */\n\tconst deleteRow = (event, rowid) => {\n\t\tif (state.jiras.length > 1) {\n\t\t\t// filter out anything that does not match the provided rowid\n\t\t\tconst remainders = state.jiras.filter((jira) => jira.rowid !== rowid);\n\t\t\tsetState({\n\t\t\t\tjiras: remainders,\n\t\t\t\tlastRowId: state.lastRowId,\n\t\t\t});\n\t\t} else {\n\t\t\tevent.target.innerHTML = '<i class=\"bi bi-exclamation-circle\"></i> Cannot delete the only row';\n\t\t\tsetTimeout(() => {\n\t\t\t\tevent.target.innerHTML = '<i class=\"bi bi-trash\"></i> Delete Row';\n\t\t\t}, 2000);\n\t\t}\n\t};\n\n\t/**\n\t * Clear the table and show only one row with default rows.\n\t */\n\tconst resetRows = () => {\n\t\tsetState({\n\t\t\tjiras: [getJiraWithCustomRowId(0)],\n\t\t\tlastRowId: 0,\n\t\t});\n\t};\n\n\t/**\n\t * Get  a JIRA JSON with customized rowid.\n\t * @param {*} customRowId\n\t * @returns\n\t */\n\tconst getJiraWithCustomRowId = (customRowId) => {\n\t\t// You need to clone the JSON object instead of making a reference to it using the \"=\" operator\n\t\tconst aJira = JSON.parse(JSON.stringify(Constants.initialJiraValues));\n\t\taJira.rowid = customRowId;\n\t\treturn aJira;\n\t};\n\n\t/**\n\t * This method handles any input change in the table.\n\t * The state JSON is updated accordingly based on the rowid, which we get from the id of the row.\n\t * @param {*} event\n\t */\n\tconst handleInputChanged = (event) => {\n\t\t// get the name and value of the field that was updated\n\t\tconst { name, value } = event.target;\n\n\t\t// rowid is stored as \"id\" in the <tr> element which has the input field\n\t\tconst rowid = parseInt(event.target.parentNode.parentNode.id);\n\n\t\t// update the value by matching the rowid\n\t\tvar tempJiraStateHolder = state.jiras;\n\t\tfor (var i = 0; i < tempJiraStateHolder.length; i++) {\n\t\t\tvar aJira = tempJiraStateHolder[i];\n\t\t\tif (aJira.rowid === rowid) {\n\t\t\t\taJira[name] = value;\n\t\t\t}\n\t\t}\n\n\t\t// update the state\n\t\tsetState({\n\t\t\tjiras: tempJiraStateHolder,\n\t\t\tlastRowId: state.lastRowId,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"container w-100\">\n\t\t\t<div className=\"table-responsive\">\n\t\t\t\t<table id=\"jiraholdertable\" className=\"table table-bordered table-hover\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th className=\"text-center\">Jira Summary</th>\n\t\t\t\t\t\t\t<th className=\"text-center\">Description</th>\n\t\t\t\t\t\t\t<th className=\"text-center\">Priority</th>\n\t\t\t\t\t\t\t<th className=\"text-center\">Assignee</th>\n\t\t\t\t\t\t\t<th className=\"text-center\">Fix Version</th>\n\t\t\t\t\t\t\t<th className=\"text-center\">Dev Priority</th>\n\t\t\t\t\t\t\t<th className=\"text-center\">Deletions</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{state.jiras.map((jira) => (\n\t\t\t\t\t\t\t<tr key={jira.rowid} id={jira.rowid} className=\"animate__animated animate__fadeIn animate__faster\">\n\t\t\t\t\t\t\t\t<td className=\"w-25\">\n\t\t\t\t\t\t\t\t\t<input className=\"form-control\" name=\"summary\" value={jira.summary} onChange={handleInputChanged} autoFocus></input>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"w-25\">\n\t\t\t\t\t\t\t\t\t<textarea className=\"form-control\" rows=\"1\" name=\"description\" value={jira.description} onChange={handleInputChanged}></textarea>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<select className=\"btn btn-secondary dropdown-toggle  w-100\" name=\"priority\" value={jira.priority} onChange={handleInputChanged}>\n\t\t\t\t\t\t\t\t\t\t<option value=\"@inherit\">Inherit</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"Blocker\">Blocker</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"Critical\">Critical</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"Major\">Major</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"Minor\">Minor</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"Trivial\">Trivial</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<select className=\"btn btn-secondary dropdown-toggle  w-100\" name=\"assignee\" value={jira.assignee} onChange={handleInputChanged}>\n\t\t\t\t\t\t\t\t\t\t<option value=\"@current\">Me</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"@inherit\">Inherit</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<select className=\"btn btn-secondary dropdown-toggle  w-100\" name=\"fixversion\" value={jira.fixversion} onChange={handleInputChanged}>\n\t\t\t\t\t\t\t\t\t\t<option value=\"@inherit\">Inherit</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<select className=\"btn btn-secondary dropdown-toggle  w-100\" name=\"devpriority\" value={jira.devpriority} onChange={handleInputChanged}>\n\t\t\t\t\t\t\t\t\t\t<option value=\"@inherit\">Inherit</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger w-100\"\n\t\t\t\t\t\t\t\t\t\tonClick={function (event) {\n\t\t\t\t\t\t\t\t\t\t\tdeleteRow(event, jira.rowid);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className=\"bi bi-trash\"></i> Delete Row\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t<p className=\"btn btn-success float-right\" onClick={addRow}>\n\t\t\t\t\t<i className=\"bi bi-plus-circle\"></i> Add Sub-task\n\t\t\t\t</p>\n\t\t\t\t<p className=\"btn btn-warning float-right\" onClick={resetRows}>\n\t\t\t\t\t<i className=\"bi bi-x-octagon\"></i> Reset\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<br />\n\n\t\t\t<JiraResults jiras={state.jiras} />\n\n\t\t\t<br />\n\n\t\t\t<HowItWorks />\n\t\t</div>\n\t);\n};\n\nexport default JiraHolder;\n","import React from \"react\";\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\nimport \"../css/forkmeongithub.css\";\n\nconst ForkMeOnGitHub = () => {\n\treturn (\n\t\t<div>\n\t\t\t<a className=\"github-fork-ribbon right-bottom fixed animate__animated animate__pulse\" href=\"https://github.com/anushibin007/jira-bulk-sub-task-creator\" data-ribbon=\"Fork me on GitHub\" title=\"Fork me on GitHub\">\n\t\t\t\tFork me on GitHub\n\t\t\t</a>\n\t\t</div>\n\t);\n};\n\nexport default ForkMeOnGitHub;\n","import \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport JiraHolder from \"./components/JiraHolder\";\nimport ForkMeOnGitHub from \"./components/ForkMeOnGithub\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"animate.css/animate.min.css\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navigation />\n\t\t\t<JiraHolder />\n\t\t\t<ForkMeOnGitHub />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}